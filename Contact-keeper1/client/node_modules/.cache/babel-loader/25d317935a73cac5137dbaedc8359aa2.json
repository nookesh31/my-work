{"ast":null,"code":"import React,{useContext}from'react';import ContactContext from'../../context/contact/contactContext';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var ContactItems=function ContactItems(_ref){var contact=_ref.contact;var contactContext=useContext(ContactContext);var _id=contact._id,name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var deleteContact=contactContext.deleteContact,setCurrent=contactContext.setCurrent,clearCurrent=contactContext.clearCurrent;var onDelete=function onDelete(){deleteContact(_id);clearCurrent();};return/*#__PURE__*/_jsxs(\"div\",{className:\"card bg-light\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-primary text-left\",children:[name,\" \",' ',\" \",/*#__PURE__*/_jsxs(\"span\",{style:{float:'right'},className:'badge '+(type==='personal'?'badge-success':'badge-primary'),children:[\" \",type.charAt(0).toUpperCase()+type.slice(1)]})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list\",children:[email&&/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-envelope-open\",children:email})}),phone&&/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-phone\",children:phone})})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark btn-sm\",onClick:function onClick(){return setCurrent(contact);},children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:onDelete,children:\"Delete\"})]})]});};export default ContactItems;","map":{"version":3,"sources":["/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/components/contacts/ContactItems.js"],"names":["React","useContext","ContactContext","ContactItems","contact","contactContext","_id","name","email","phone","type","deleteContact","setCurrent","clearCurrent","onDelete","float","charAt","toUpperCase","slice"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,C,wFAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAClC,GAAMC,CAAAA,cAAc,CAAGJ,UAAU,CAACC,cAAD,CAAjC,CADkC,GAE3BI,CAAAA,GAF2B,CAEMF,OAFN,CAE3BE,GAF2B,CAEtBC,IAFsB,CAEMH,OAFN,CAEtBG,IAFsB,CAEhBC,KAFgB,CAEMJ,OAFN,CAEhBI,KAFgB,CAETC,KAFS,CAEML,OAFN,CAETK,KAFS,CAEFC,IAFE,CAEMN,OAFN,CAEFM,IAFE,IAI1BC,CAAAA,aAJ0B,CAIgBN,cAJhB,CAI1BM,aAJ0B,CAIZC,UAJY,CAIgBP,cAJhB,CAIZO,UAJY,CAIAC,YAJA,CAIgBR,cAJhB,CAIAQ,YAJA,CAMlC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnBH,aAAa,CAACL,GAAD,CAAb,CACAO,YAAY,GACf,CAHD,CAIA,mBACI,aAAK,SAAS,CAAC,eAAf,wBACI,YAAI,SAAS,CAAG,wBAAhB,WACMN,IADN,KACc,GADd,kBACmB,cAAM,KAAK,CAAE,CAAEQ,KAAK,CAAE,OAAT,CAAb,CAAgC,SAAS,CAAE,UAAUL,IAAI,GAAK,UAAT,CAAsB,eAAtB,CAAwC,eAAlD,CAA3C,eAAkHA,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,WAAf,GAA8BP,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAhJ,GADnB,GADJ,cAII,YAAI,SAAS,CAAC,MAAd,WACMV,KAAK,eAAK,iCACR,UAAG,SAAS,CAAC,sBAAb,UACEA,KADF,EADQ,EADhB,CAMMC,KAAK,eAAK,iCACR,UAAG,SAAS,CAAC,cAAb,UACEA,KADF,EADQ,EANhB,GAJJ,cAgBI,kCACI,eAAQ,SAAS,CAAC,qBAAlB,CAAwC,OAAO,CAAE,yBAAMG,CAAAA,UAAU,CAACR,OAAD,CAAhB,EAAjD,kBADJ,cAEI,eAAQ,SAAS,CAAC,uBAAlB,CAA0C,OAAO,CAAEU,QAAnD,oBAFJ,GAhBJ,GADJ,CAyBH,CAnCD,CAyCA,cAAeX,CAAAA,YAAf","sourcesContent":["import React,{ useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport ContactContext from '../../context/contact/contactContext';\n\n\n\nconst ContactItems = ({ contact }) => {\n    const contactContext = useContext(ContactContext)\n    const {_id, name, email, phone, type} = contact; \n\n    const { deleteContact,setCurrent, clearCurrent} = contactContext;\n\n    const onDelete = () => {\n        deleteContact(_id);\n        clearCurrent();\n    };\n    return (\n        <div className='card bg-light'>\n            <h3 className = \"text-primary text-left\">\n                { name } {' '} <span style={{ float: 'right'}} className={'badge '+(type === 'personal' ? 'badge-success' : 'badge-primary')}> { type.charAt(0).toUpperCase()+ type.slice(1) }</span>\n            </h3>\n            <ul className='list'>\n                { email && (<li>\n                    <i className='fas fa-envelope-open'>\n                    { email }\n                    </i>\n                </li>)}\n                { phone && (<li>\n                    <i className='fas fa-phone'>\n                    { phone}\n                    </i>\n                </li>)}\n            </ul>\n            <p>\n                <button className='btn btn-dark btn-sm' onClick={() => setCurrent(contact)}>Edit</button>\n                <button className='btn btn-danger btn-sm' onClick={onDelete}>Delete</button>\n\n            </p>\n        </div>\n    );\n    \n};\n\nContactItems.propTypes = {\n    contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItems\n"]},"metadata":{},"sourceType":"module"}