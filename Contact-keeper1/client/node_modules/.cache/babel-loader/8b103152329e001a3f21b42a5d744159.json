{"ast":null,"code":"import _toConsumableArray from\"/home/dev5/Desktop/Nookesh/Contact-Keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/dev5/Desktop/Nookesh/Contact-Keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR,GET_CONTACTS,CLEAR_CONTACTS}from'../types';var contactReducer=function contactReducer(state,action){switch(action.type){case GET_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:action.payload,loading:false});case ADD_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false});case DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;}),loading:false});case CLEAR_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:null,filtered:null,error:null,current:null});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false});case FILTER_CONTACTS:return _objectSpread(_objectSpread({},state),{},{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),'gi');return contact.name.match(regex)||contact.email.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});case CONTACT_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}};export default contactReducer;","map":{"version":3,"sources":["/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","contactReducer","state","action","type","contacts","payload","loading","filter","contact","_id","filtered","error","current","map","regex","RegExp","name","match","email"],"mappings":"qVAAA,OACIA,WADJ,CAEIC,cAFJ,CAGIC,WAHJ,CAIIC,aAJJ,CAKIC,cALJ,CAMIC,eANJ,CAOIC,YAPJ,CAQIC,aARJ,CASIC,YATJ,CAUIC,cAVJ,KAWO,UAXP,CAaA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACtC,OAAOA,MAAM,CAACC,IAAd,EACG,IAAKL,CAAAA,YAAL,CACI,sCACOG,KADP,MAEIG,QAAQ,CAAEF,MAAM,CAACG,OAFrB,CAGIC,OAAO,CAAE,KAHb,GAMJ,IAAKhB,CAAAA,WAAL,CACI,sCACOW,KADP,MAEIG,QAAQ,EAAIF,MAAM,CAACG,OAAX,4BAAuBJ,KAAK,CAACG,QAA7B,EAFZ,CAGIE,OAAO,CAAE,KAHb,GAKH,IAAKf,CAAAA,cAAL,CACI,sCACOU,KADP,MAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAA3B,EAA7B,CAFd,CAGIC,OAAO,CAAE,KAHb,GAKJ,IAAKP,CAAAA,cAAL,CACI,sCACOE,KADP,MAEIG,QAAQ,CAAE,IAFd,CAGIM,QAAQ,CAAE,IAHd,CAIIC,KAAK,CAAE,IAJX,CAKIC,OAAO,CAAE,IALb,GAOJ,IAAKpB,CAAAA,WAAL,CACI,sCACOS,KADP,MAEIW,OAAO,CAAEV,MAAM,CAACG,OAFpB,GAIJ,IAAKZ,CAAAA,aAAL,CACI,sCACOQ,KADP,MAEIW,OAAO,CAAE,IAFb,GAIJ,IAAKlB,CAAAA,cAAL,CACI,sCACOO,KADP,MAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeS,GAAf,CAAmB,SAAAL,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OAA1D,EAA1B,CAFd,CAGIF,OAAO,CAAE,KAHb,GAKJ,IAAKX,CAAAA,eAAL,CACI,sCACOM,KADP,MAEIS,QAAQ,CAAET,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsB,SAAAC,OAAO,CAAI,CACvC,GAAMM,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACH,CAHS,CAFd,GAOJ,IAAKlB,CAAAA,YAAL,CACI,sCACOK,KADP,MAEIS,QAAQ,CAAE,IAFd,GAIJ,IAAKb,CAAAA,aAAL,CACI,sCACOI,KADP,MAEIU,KAAK,CAAET,MAAM,CAACG,OAFlB,GAIJ,QACI,MAAOJ,CAAAA,KAAP,CA/DR,CAiEH,CAlED,CAmEA,cAAeD,CAAAA,cAAf","sourcesContent":["import {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR,\n    GET_CONTACTS,\n    CLEAR_CONTACTS\n} from '../types';\n\nconst contactReducer = (state, action) => {\n    switch(action.type) {\n       case GET_CONTACTS:\n           return {\n               ...state,\n               contacts: action.payload,\n               loading: false\n           }\n\n       case ADD_CONTACT:\n           return {\n               ...state,\n               contacts: [ action.payload, ...state.contacts],\n               loading: false\n           };\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact._id !== action.payload),\n                loading: false, \n            };\n        case CLEAR_CONTACTS:\n            return {\n                ...state,\n                contacts: null,\n                filtered: null,\n                error: null,\n                current: null\n            }\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            };\n        case UPDATE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\n                loading: false\n            };\n        case FILTER_CONTACTS:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`, 'gi');\n                    return contact.name.match(regex) || contact.email.match(regex);\n                })\n            };\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            };\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default contactReducer;"]},"metadata":{},"sourceType":"module"}