{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import ContactItems from'./ContactItems';import ContactContext from'../../context/contact/contactContext';import Spinner from'../layout/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();// eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return/*#__PURE__*/_jsx(\"h4\",{children:\"Please add a contact\"});}return/*#__PURE__*/_jsx(Fragment,{children:contacts!==null&&!loading?/*#__PURE__*/_jsx(TransitionGroup,{children:filtered!==null?filtered.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:500,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItems,{contact:contact})},contact._id);}):contacts.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:500,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItems,{contact:contact})},contact._id);})}):/*#__PURE__*/_jsx(Spinner,{})});};export default Contacts;","map":{"version":3,"sources":["/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactItems","ContactContext","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,UAAxB,CAAoCC,SAApC,KAAoD,OAApD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACtB,GAAMC,CAAAA,cAAc,CAAGR,UAAU,CAACK,cAAD,CAAjC,CADsB,GAGdI,CAAAA,QAHc,CAG+BD,cAH/B,CAGdC,QAHc,CAGJC,QAHI,CAG+BF,cAH/B,CAGJE,QAHI,CAGMC,WAHN,CAG+BH,cAH/B,CAGMG,WAHN,CAGmBC,OAHnB,CAG+BJ,cAH/B,CAGmBI,OAHnB,CAKtBX,SAAS,CAAC,UAAM,CACZU,WAAW,GACX;AACJ,CAHS,CAGR,EAHQ,CAAT,CAKA,GAAGF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAlD,CAA2D,CACvD,mBAAO,4CAAP,CACH,CAEE,mBACI,KAAC,QAAD,WACMH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,cACE,KAAC,eAAD,WACCF,QAAQ,GAAK,IAAb,CAAoBA,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,qBACzC,KAAC,aAAD,EAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,uBACA,KAAC,YAAD,EAAe,OAAO,CAAEA,OAAxB,EADA,EAAoBA,OAAO,CAACC,GAA5B,CADyC,EAApB,CAApB,CAGqBP,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,qBACxC,KAAC,aAAD,EAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,uBACC,KAAC,YAAD,EAAe,OAAO,CAAEA,OAAxB,EADD,EAAoBA,OAAO,CAACC,GAA5B,CADwC,EAApB,CAJtB,EADF,cAWE,KAAC,OAAD,IAZR,EADJ,CAiBH,CA/BD,CAiCA,cAAeT,CAAAA,QAAf","sourcesContent":["import React,{ Fragment,useContext, useEffect} from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItems from './ContactItems'\nimport ContactContext from '../../context/contact/contactContext';\nimport Spinner from '../layout/Spinner'\n\nconst Contacts = () => {\n const contactContext = useContext(ContactContext);\n\n const { contacts, filtered, getContacts, loading } = contactContext;\n\n useEffect(() => {\n     getContacts();\n     // eslint-disable-next-line\n},[])\n\n if(contacts !== null && contacts.length === 0 && !loading) {\n     return <h4>Please add a contact</h4>\n }\n\n    return (\n        <Fragment>\n            { contacts !== null && !loading ? (\n                <TransitionGroup>\n                {filtered !== null ? filtered.map(contact => (\n                <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n                <ContactItems  contact={contact}/>\n                </CSSTransition>)) :  contacts.map(contact => (\n                  <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n                   <ContactItems  contact={contact} />\n                   </CSSTransition>\n                ))}\n                </TransitionGroup>\n            ) : <Spinner />}\n            \n        </Fragment>\n    )\n}\n\nexport default Contacts\n"]},"metadata":{},"sourceType":"module"}