{"ast":null,"code":"var _jsxFileName = \"/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/context/alert/AlertState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport * as uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertState = props => {\n  _s();\n\n  const initialState = [];\n  const [state, dispatch] = useReducer(alertReducer, initialState); //set alert\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  }; //remove alert\n\n\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlertState, \"wVzs03LCUcYtKoVkfIy0rOpkY6I=\");\n\n_c = AlertState;\nexport default AlertState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertState\");","map":{"version":3,"sources":["/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","uuid","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","v4","payload","setTimeout","alert","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAiC,OAAjC;AACA,OAAQ,KAAKC,IAAb,MAAuB,MAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACIC,SADJ,EAEIC,YAFJ,QAIO,UAJP;;;AAMA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAMC,YAAY,GAAG,EAArB;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBV,UAAU,CAACG,YAAD,EAAeK,YAAf,CAArC,CAF4B,CAGxB;;AACA,QAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC5C,UAAMC,EAAE,GAAGd,IAAI,CAACe,EAAL,EAAX;AACAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,SADD;AAELa,MAAAA,OAAO,EAAE;AAAEL,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAFJ,KAAD,CAAR;AAIAG,IAAAA,UAAU,CAAC,MAAMR,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,YAAR;AAAsBY,MAAAA,OAAO,EAAEF;AAA/B,KAAD,CAAf,EAAqDD,OAArD,CAAV;AACH,GAPD,CAJwB,CAYxB;;;AAGJ,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAC3BK,MAAAA,KAAK,EAAEV,KADoB;AAE3BE,MAAAA;AAF2B,KAA9B;AAAA,cAIMJ,KAAK,CAACa;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQC,CAvBD;;GAAMd,U;;KAAAA,U;AAwBN,eAAeA,UAAf","sourcesContent":["import React,{ useReducer } from 'react';\nimport  * as uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport {\n    SET_ALERT,\n    REMOVE_ALERT\n    \n} from '../types';\n\nconst AlertState = props => {\n    const initialState = [];\nconst [state, dispatch ] = useReducer(alertReducer, initialState);\n    //set alert\n    const setAlert = (msg, type, timeout = 5000) => {\n        const id = uuid.v4();\n        dispatch({\n            type: SET_ALERT,\n            payload: { msg, type, id }\n        });\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id}), timeout)\n    }\n    //remove alert\n\n\nreturn (\n    <AlertContext.Provider value={{\n       alert: state,\n       setAlert\n    }}>\n        { props.children}\n    </AlertContext.Provider>\n)\n};\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}