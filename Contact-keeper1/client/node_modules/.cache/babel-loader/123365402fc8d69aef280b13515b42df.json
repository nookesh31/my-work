{"ast":null,"code":"var _jsxFileName = \"/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/components/contacts/ContactItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactItems = ({\n  contact\n}) => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    id,\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n  const {\n    deleteContact\n  } = ContactContext;\n\n  const onDelete = () => {\n    deleteContact(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-primary text-left\",\n      children: [name, \" \", ' ', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          float: 'right'\n        },\n        className: 'badge ' + (type === 'personal' ? 'badge-success' : 'badge-primary'),\n        children: [\" \", type.charAt(0).toUpperCase() + type.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: [email && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-envelope-open\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 29\n      }, this), phone && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-phone\",\n          children: phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark btn-sm\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger btn-sm\",\n        onClick: onDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactItems, \"6ffJmqxeUUv4Q9skTZKiRD1WUuU=\");\n\n_c = ContactItems;\nContactItems.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default ContactItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactItems\");","map":{"version":3,"sources":["/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/components/contacts/ContactItems.js"],"names":["React","useContext","PropTypes","ContactContext","ContactItems","contact","contactContext","id","name","email","phone","type","deleteContact","onDelete","float","charAt","toUpperCase","slice","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAClC,QAAMC,cAAc,GAAGL,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAACI,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAAiCN,OAAvC;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAoBT,cAA1B;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACnBD,IAAAA,aAAa,CAACL,EAAD,CAAb;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAG,wBAAhB;AAAA,iBACMC,IADN,OACc,GADd,oBACmB;AAAM,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAgC,QAAA,SAAS,EAAE,YAAUH,IAAI,KAAK,UAAT,GAAsB,eAAtB,GAAwC,eAAlD,CAA3C;AAAA,wBAAkHA,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA8BL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,iBACMR,KAAK,iBAAK;AAAA,+BACR;AAAG,UAAA,SAAS,EAAC,sBAAb;AAAA,oBACEA;AADF;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,cADhB,EAMMC,KAAK,iBAAK;AAAA,+BACR;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA,oBACEA;AADF;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,cANhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAgBI;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAEG,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAjCD;;GAAMT,Y;;KAAAA,Y;AAmCNA,YAAY,CAACc,SAAb,GAAyB;AACrBb,EAAAA,OAAO,EAAEH,SAAS,CAACiB,MAAV,CAAiBC;AADL,CAAzB;AAIA,eAAehB,YAAf","sourcesContent":["import React,{ useContext} from 'react'\nimport PropTypes from 'prop-types'\nimport ContactContext from '../../context/contact/contactContext';\n\n\n\nconst ContactItems = ({ contact }) => {\n    const contactContext = useContext(ContactContext)\n    const {id, name, email, phone, type} = contact; \n\n    const { deleteContact } = ContactContext;\n\n    const onDelete = () => {\n        deleteContact(id);\n    }\n    return (\n        <div className='card bg-light'>\n            <h3 className = \"text-primary text-left\">\n                { name } {' '} <span style={{ float: 'right'}} className={'badge '+(type === 'personal' ? 'badge-success' : 'badge-primary')}> { type.charAt(0).toUpperCase()+ type.slice(1) }</span>\n            </h3>\n            <ul className='list'>\n                { email && (<li>\n                    <i className='fas fa-envelope-open'>\n                    { email }\n                    </i>\n                </li>)}\n                { phone && (<li>\n                    <i className='fas fa-phone'>\n                    { phone}\n                    </i>\n                </li>)}\n            </ul>\n            <p>\n                <button className='btn btn-dark btn-sm'>Edit</button>\n                <button className='btn btn-danger btn-sm' onClick={onDelete}>Delete</button>\n\n            </p>\n        </div>\n    )\n}\n\nContactItems.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default ContactItems\n"]},"metadata":{},"sourceType":"module"}