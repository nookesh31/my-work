{"ast":null,"code":"var _jsxFileName = \"/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // add contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // delete contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // set current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // clear current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // filter contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // clear contacts\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  }; // set alert\n  // remove alert\n\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"wVzs03LCUcYtKoVkfIy0rOpkY6I=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,EAQIC,aARJ,QAUO,UAVP;;;AAYA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBnB,UAAU,CAACG,cAAD,EAAiBW,YAAjB,CAArC,CAP0B,CAQ1B;;AACA,QAAMM,UAAU,GAAG,MAAMC,OAAN,IAAiB;AACjC,UAAOC,MAAM,GAAG;AACZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADG,KAAhB;;AAKA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,eAAX,EAA4BJ,OAA5B,EAAqCC,MAArC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEtB,WAAR;AACRuB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AADL,OAAD,CAAR;AAGH,KALD,CAKE,OAAOC,GAAP,EAAY;AACbV,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEf,aADD;AAENgB,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAFhB,OAAD,CAAR;AAKA;AAGH,GApBD,CAT0B,CA8B1B;;;AACA,QAAMC,aAAa,GAAGC,EAAE,IAAI;AACxBd,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAErB,cAAR;AAAuBsB,MAAAA,OAAO,EAAEM;AAAhC,KAAD,CAAR;AACH,GAFD,CA/B0B,CAkC1B;;;AACA,QAAMC,UAAU,GAAGb,OAAO,IAAG;AACzBF,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEpB,WAAR;AAAoBqB,MAAAA,OAAO,EAAEN;AAA7B,KAAD,CAAR;AACH,GAFD,CAnC0B,CAsC1B;;;AACA,QAAMc,YAAY,GAAG,MAAK;AACtBhB,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEnB;AAAR,KAAD,CAAR;AACH,GAFD,CAvC0B,CA0C1B;;;AACA,QAAM6B,aAAa,GAAGf,OAAO,IAAG;AAC5BF,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAElB,cAAR;AAAuBmB,MAAAA,OAAO,EAAEN;AAAhC,KAAD,CAAR;AACH,GAFD,CA3C0B,CA8C1B;;;AACA,QAAMgB,cAAc,GAAGC,IAAI,IAAG;AAC1BnB,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEjB,eAAR;AAAwBkB,MAAAA,OAAO,EAAEW;AAAjC,KAAD,CAAR;AACH,GAFD,CA/C0B,CAkD1B;;;AACA,QAAMC,WAAW,GAAG,MAAK;AACrBpB,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACH,GAFD,CAnD0B,CAsD1B;AACA;;;AAEJ,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAC5BK,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADY;AAE5BC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFa;AAG5BC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAHY;AAI5BG,MAAAA,UAJ4B;AAK5BY,MAAAA,aAL4B;AAM5BE,MAAAA,UAN4B;AAO5BC,MAAAA,YAP4B;AAQ5BC,MAAAA,aAR4B;AAS5BC,MAAAA,cAT4B;AAU5BE,MAAAA;AAV4B,KAAhC;AAAA,cAaM1B,KAAK,CAAC2B;AAbZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBC,CA1ED;;GAAM5B,Y;;KAAAA,Y;AA2EN,eAAeA,YAAf","sourcesContent":["import React,{ useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n    \n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null\n    \n    };\n    const [state, dispatch ] = useReducer(contactReducer, initialState);\n    // add contact\n    const addContact = async contact => {\n       const  config = {\n           headers: { \n               'Content-Type': 'application/json'\n           }\n       } \n       try {\n           const res = await axios.post('/api/contacts', contact, config);\n           dispatch({ type: ADD_CONTACT,\n            payload: res.data \n        });\n       } catch (err) {\n        dispatch({  \n            type: CONTACT_ERROR,\n           payload: err.response.msg \n        });\n\n       }\n        \n\n    }\n    // delete contact\n    const deleteContact = id => {\n        dispatch({ type: DELETE_CONTACT,payload: id});\n    }\n    // set current\n    const setCurrent = contact=> {\n        dispatch({ type: SET_CURRENT,payload: contact});\n    }\n    // clear current\n    const clearCurrent = ()=> {\n        dispatch({ type: CLEAR_CURRENT});\n    }\n    // update contact\n    const updateContact = contact=> {\n        dispatch({ type: UPDATE_CONTACT,payload: contact});\n    }\n    // filter contacts\n    const filterContacts = text=> {\n        dispatch({ type: FILTER_CONTACTS,payload: text });\n    }\n    // clear contacts\n    const clearFilter = ()=> {\n        dispatch({ type: CLEAR_FILTER });\n    }\n    // set alert\n    // remove alert\n\nreturn (\n    <ContactContext.Provider value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter\n\n    }}>\n        { props.children}\n    </ContactContext.Provider>\n)\n};\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}