{"ast":null,"code":"import React,{useContext,useEffect,useRef}from'react';import ContactContext from'../../context/contact/contactContext';import{jsx as _jsx}from\"react/jsx-runtime\";var ContactFilter=function ContactFilter(){var contactContext=useContext(ContactContext);var text=useRef('');var filterContacts=contactContext.filterContacts,clearFilter=contactContext.clearFilter,filtered=contactContext.filtered;useEffect(function(){if(filtered===null){text.current.value='';}});var onChange=function onChange(e){if(text.current.value!==''){filterContacts(e.target.value);}else{clearFilter();}};return/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"input\",{ref:text,type:\"text\",placeholder:\"Filter Contacts...\",onChange:onChange})});};export default ContactFilter;","map":{"version":3,"sources":["/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useEffect","useRef","ContactContext","ContactFilter","contactContext","text","filterContacts","clearFilter","filtered","current","value","onChange","e","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA2BC,SAA3B,CAAqCC,MAArC,KAAkD,OAAlD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,C,2CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC5B,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACG,cAAD,CAAjC,CACA,GAAMG,CAAAA,IAAI,CAAIJ,MAAM,CAAC,EAAD,CAApB,CAF4B,GAGpBK,CAAAA,cAHoB,CAGsBF,cAHtB,CAGpBE,cAHoB,CAGJC,WAHI,CAGsBH,cAHtB,CAGJG,WAHI,CAGSC,QAHT,CAGsBJ,cAHtB,CAGSI,QAHT,CAK5BR,SAAS,CAAC,UAAM,CACZ,GAAGQ,QAAQ,GAAK,IAAhB,CAAqB,CACjBH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACH,CACJ,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CACtB,GAAGP,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAuB,EAA1B,CAA6B,CACzBJ,cAAc,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAd,CACH,CAFD,IAEO,CACHH,WAAW,GACd,CACA,CAND,CAQI,mBACI,mCACI,cAAO,GAAG,CAAEF,IAAZ,CAAkB,IAAI,CAAC,MAAvB,CAA8B,WAAW,CAAC,oBAA1C,CAA+D,QAAQ,CAAEM,QAAzE,EADJ,EADJ,CAKH,CAxBD,CA0BA,cAAeR,CAAAA,aAAf","sourcesContent":["import React, { useContext,useEffect,useRef} from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactFilter = () => {\nconst contactContext = useContext(ContactContext);\nconst text  = useRef('');\nconst { filterContacts, clearFilter, filtered } = contactContext;\n\nuseEffect(() => {\n    if(filtered === null){\n        text.current.value = '';\n    }\n})\n\nconst onChange = e => {\nif(text.current.value !== ''){\n    filterContacts(e.target.value)\n} else {\n    clearFilter();\n}\n}\n\n    return (\n        <form>\n            <input ref={text} type=\"text\" placeholder=\"Filter Contacts...\" onChange={onChange}/>\n        </form>\n    )\n}\n\nexport default ContactFilter\n"]},"metadata":{},"sourceType":"module"}