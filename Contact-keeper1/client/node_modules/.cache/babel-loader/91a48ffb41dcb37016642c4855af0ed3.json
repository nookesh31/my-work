{"ast":null,"code":"var _jsxFileName = \"/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/context/auth/Authstate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { RESGISTER_SUCCESS, RESGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); //Load user\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //register user\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('api/users', formData, config);\n      dispatch({\n        type: RESGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: RESGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //login user\n\n\n  const login = () => console.log('login'); //logout\n\n\n  const logout = () => console.log('logout'); //clear errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"wVzs03LCUcYtKoVkfIy0rOpkY6I=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/dev5/Desktop/Nookesh/Contact-Keeper/client/src/context/auth/Authstate.js"],"names":["React","useReducer","axios","AuthContext","authReducer","setAuthToken","RESGISTER_SUCCESS","RESGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","console","log","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React,{ useReducer } from 'react';\nimport axios from 'axios'\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken'\nimport {\n    RESGISTER_SUCCESS,\n    RESGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n    \n} from '../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading:true,\n        user: null,\n        error: null\n       \n    };\nconst [state, dispatch ] = useReducer(authReducer, initialState);\n    //Load user\n    const loadUser = async () => {\n        if (localStorage.token) {\n            setAuthToken(localStorage.token); \n        } \n        try {\n            const res = await axios.get('/api/auth');\n\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data\n            })\n        } catch (err) {\n            dispatch({ type: AUTH_ERROR });\n        }\n    };\n    //register user\n    const register = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('api/users',formData,config);\n            dispatch({\n                type: RESGISTER_SUCCESS,\n                payload: res.data\n            });\n            loadUser();\n        } catch (err) {\n            dispatch({\n                type: RESGISTER_FAIL,\n                payload: err.response.data.msg\n            });\n        }\n    }\n    //login user\n        const login = () => console.log('login');\n\n    //logout\n    const logout = () => console.log('logout');\n\n    //clear errors\n    const clearErrors = () => dispatch({ type: CLEAR_ERRORS});\n\n\n\nreturn (\n    <AuthContext.Provider value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors\n\n    }}>\n        { props.children}\n    </AuthContext.Provider>\n)\n};\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}